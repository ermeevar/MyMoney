using Bot.Commands.Abstractions;
using Bot.Extensions;
using Bot.MembershipProvider;
using Bot.Start;
using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;

namespace Bot.Commands.Implementations.Calculator;

/// <summary>
/// –ö–æ–º–º–∞–Ω–¥–∞ —Ä–∞—Å—Å—á–µ—Ç–∞ –æ—Ç–ø—É—Å–∫–Ω—ã—Ö –¥–Ω–µ–π
/// </summary>
public class VacationDaysCommand: BaseCommand
{
    private readonly HostPoint _host;
    
    /// <inheritdoc/>
    public override string Key => "calcdays";

    /// <inheritdoc/>
    public override string Name => "üå¥ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ—Ç–ø—É—Å–∫–Ω—ã–µ –¥–Ω–∏";
    
    /// <inheritdoc/>
    public VacationDaysCommand(BotClient telegramBot, HostPoint host) : base(telegramBot)
        => _host = host;

    /// <inheritdoc/>
    public override async Task ExecuteAsync(Update update)
    {
        var days = await _host.CalcVacationDays(update.Message!.Chat.Id);

        await CurrentClient.SendTextMessageAsync(update.Message!.Chat.Id, 
            $"–í—ã –Ω–∞–∫–æ–ø–∏–ª–∏ <b>{days}</b> –¥–Ω–µ–π –æ—Ç–ø—É—Å–∫–∞! ü™∏", 0, ParseMode.Html, replyMarkup: GetButtons());
    }
    
    /// <inheritdoc/>
    internal override IReplyMarkup GetButtons()
        => new ReplyKeyboardMarkup(new List<List<KeyboardButton>>
        {
            new() { GetCommand<StartCommand>().ToButton() }
        });
}